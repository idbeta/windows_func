name: test_apisix_on_centos7

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:     
  test_apisix:
    name: test_apisix
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: run centos7 docker
      run: |
        docker pull centos:7
        docker run -dit --hostname centos7 --name centos7 --restart=always docker.io/centos:7 /bin/bash
        docker exec centos7 bash -c "yum install -y wget tar gcc automake autoconf libtool make && wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rpm -ivh epel-release-latest-7.noarch.rpm"
        docker exec centos7 bash -c "yum install -y curl git luarocks lua-devel which && wget https://github.com/etcd-io/etcd/releases/download/v3.4.13/etcd-v3.4.13-linux-amd64.tar.gz"
        docker exec centos7 bash -c "tar -xvf etcd-v3.4.13-linux-amd64.tar.gz && cd etcd-v3.4.13-linux-amd64 && cp -a etcd etcdctl /usr/bin/ && cd .. && etcd &"
        docker exec centos7 bash -c "yum install -y yum-utils && yum-config-manager --add-repo https://openresty.org/package/centos/openresty.repo"
        docker exec centos7 bash -c "yum install -y openresty-debug && yum install -y openresty"
        docker exec centos7 bash -c 'echo "export PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin" | tee -a /etc/profile'
        


    - name: run test
      run: |
        docker exec centos7 bash -c "git clone https://github.com/apache/apisix.git"
        docker exec centos7 bash -c "cd apisix && make deps"
        docker exec centos7 bash -c 'echo "export PERL5LIB=.:$PERL5LIB" | tee -a /etc/profile'
        docker exec centos7 bash -c 'echo "export OPENRESTY_PREFIX="/usr/local/openresty-debug" | tee -a /etc/profile'
        docker exec centos7 bash -c 'echo "export PATH=$OPENRESTY_PREFIX/nginx/sbin:$OPENRESTY_PREFIX/luajit/bin:$OPENRESTY_PREFIX/bin:$PATH" | tee -a /etc/profile'
        docker exec centos7 bash -c "yum install -y cpanminus build-essential libncurses5-dev libreadline-dev libssl-dev perl"
        docker exec centos7 bash -c "cpanm --notest Test::Nginx IPC::Run > build.log 2>&1 || (cat build.log && exit 1)"
        docker exec centos7 bash -c "export"
